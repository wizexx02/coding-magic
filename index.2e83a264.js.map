{"mappings":"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","sources":["src/js/header-filtration.js","src/js/games/guess-number.js","src/js/games/google-dino.js","src/js/data/games.js","src/js/games/calculator.js","src/js/games/time-calculate.js","src/js/main-content.js"],"sourcesContent":["const burgerBtn = document.querySelector('.header__list-button');\nconst filterMenu = document.querySelector('[data-filter]');\n\nlet isOpen = false;\n\nburgerBtn.addEventListener('click', () => {\n  if (isOpen) {\n    filterMenu.style.opacity = '0';\n    filterMenu.style.pointerEvents = 'none';\n  } else {\n    filterMenu.style.opacity = '1';\n    filterMenu.style.pointerEvents = 'auto';\n  }\n  isOpen = !isOpen;\n});\n\nfilterMenu.addEventListener('click', () => {\n  filterMenu.style.opacity = '0';\n  filterMenu.style.pointerEvents = 'none';\n  isOpen = false;\n});\n","export const guessNumberInit = () => {\n  const RIDDLE_NUMBER = Math.floor(Math.random() * 10 + 1);\n  const gameContainer = document.querySelector('.guess-number');\n\n  const gameHtml = `\n  <div class=\"guess-number__container\">\n    <h2 class=\"game__title\">Вгадай число, яке загадав комп’ютер</h2>\n    <div class=\"guess-number__wrapper\">\n        <form class=\"guess-number__form\" data-guess_number_form>\n          <input class=\"guess-number__input\" type=\"number\" max=\"10\" min=\"0\" required name=\"guessNumber\" placeholder=\"Введіть число\"/>\n          <button class=\"guess-number__button\" name=\"guessNumberButton\">S</button>\n        </form>\n    </div>\n    <button class=\"guess-number__restart\";\">Перезапустити гру</button>\n    </div>`;\n\n  gameContainer.innerHTML = gameHtml;\n  const guessNumberForm = document.querySelector('[data-guess_number_form]');\n  const restartButton = document.querySelector('.guess-number__restart');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n    const numberField = form.guessNumber;\n\n    const userNumber = parseInt(numberField.value);\n\n    if (RIDDLE_NUMBER === userNumber) {\n      guessNumberForm.insertAdjacentHTML(\n        'afterend',\n        `<p class=\"guess-number__message\">Вітаю, ви вгадали число! (${RIDDLE_NUMBER})</p>`\n      );\n    } else {\n      guessNumberForm.insertAdjacentHTML(\n        'afterend',\n        `<p class=\"guess-number__message guess-number__message--error\">Ви програли, комп’ютер загадав  (${RIDDLE_NUMBER})</p>`\n      );\n    }\n    restartButton.classList.add('guess-number__restart--show');\n    form.guessNumber.disabled = true;\n    form.guessNumberButton.disabled = true;\n  };\n  const handleRestart = () => {\n    // Видалення обробників подій\n    guessNumberForm.removeEventListener('submit', handleSubmit);\n    restartButton.removeEventListener('click', handleRestart);\n    // Перезапуск гри\n    guessNumberInit();\n  };\n\n  guessNumberForm.addEventListener('submit', handleSubmit);\n  restartButton.addEventListener('click', handleRestart);\n};\n","class GoogleDinosaur {\n  constructor(dino, gameArea) {\n    this.dino = dino;\n    this.gameArea = gameArea;\n    this.score = 0;\n    this.gameOver = false;\n    this.isJumping = false;\n\n    this.gameModalStart();\n  }\n\n  init() {\n    document.addEventListener('keydown', event => {\n      if (event.code === 'Space' && !this.isJumping && !this.gameOver) {\n        this.jump();\n      }\n    });\n    this.gameArea.addEventListener('mousedown', () => {\n      if (!this.isJumping && !this.gameOver) {\n        this.jump();\n      }\n    });\n    this.renderObstacles();\n    this.checkCollision();\n  }\n\n  jump() {\n    this.isJumping = true;\n    this.dino.classList.add('jump');\n\n    setTimeout(() => {\n      this.isJumping = false;\n      this.dino.classList.remove('jump');\n    }, 500);\n  }\n\n  checkCollision() {\n    const gameProcess = () => {\n      if (this.gameOver === true) return;\n      const obstacle = this.gameArea.querySelector('.cactus');\n      const obstacleRect = obstacle.getBoundingClientRect();\n      const dinoRect = this.dino.getBoundingClientRect();\n      if (\n        dinoRect.right > obstacleRect.left &&\n        dinoRect.left < obstacleRect.right &&\n        dinoRect.bottom > obstacleRect.top\n      ) {\n        this.endGame(obstacle);\n        return;\n      }\n\n      requestAnimationFrame(gameProcess);\n    };\n    requestAnimationFrame(gameProcess);\n  }\n\n  renderObstacles() {\n    const obstacle = document.createElement('div');\n    obstacle.classList.add('cactus');\n    obstacle.style.height = this.randomHeight();\n    this.gameArea.appendChild(obstacle);\n\n    const animationHandler = () => {\n      obstacle.removeEventListener('animationiteration', animationHandler);\n      this.gameArea.removeChild(obstacle);\n      if (!this.gameOver) {\n        this.updateScore();\n        this.renderObstacles();\n      }\n    };\n    obstacle.addEventListener('animationiteration', animationHandler);\n  }\n\n  randomHeight() {\n    return `${Math.random() * (70 - 40) + 40}px`;\n  }\n\n  endGame(obstacle) {\n    obstacle.style.animationPlayState = 'paused';\n    this.gameOver = true;\n    this.gameOverModal();\n  }\n  updateScore() {\n    const scoreElement =\n      this.gameArea.parentElement.querySelector('.dino-score');\n    this.score += 1;\n    scoreElement.textContent = `Рахунок: ${this.score}`;\n  }\n  resetScore() {\n    this.score = 0;\n    const scoreElement =\n      this.gameArea.parentElement.querySelector('.dino-score');\n    scoreElement.textContent = `Рахунок: ${this.score}`;\n  }\n\n  createModal(message, buttonText, buttonCallback) {\n    const modalHtml = `\n      <div class=\"dinosaur__modal\">\n        <p class=\"dinosaur__message\">${message}</p>\n        <button class=\"dinosaur__start button\">${buttonText}</button>\n      </div>\n    `;\n    this.gameArea.insertAdjacentHTML('beforeend', modalHtml);\n\n    const modal = this.gameArea.querySelector('.dinosaur__modal');\n    setTimeout(() => {\n      modal.classList.add('show');\n    }, 10);\n\n    const retryButton = this.gameArea.querySelector('.dinosaur__start');\n    retryButton.addEventListener('click', buttonCallback);\n  }\n  gameModalStart() {\n    this.createModal('Google динозаврик!', 'Почати гру!', () => {\n      const modal = this.gameArea.querySelector('.dinosaur__modal');\n      modal.classList.remove('show');\n      setTimeout(() => {\n        modal.remove();\n      }, 250);\n      this.init();\n    });\n  }\n  gameOverModal() {\n    this.createModal('Ви програли!', 'Спробувати знову', () =>\n      this.restartGame()\n    );\n  }\n\n  restartGame() {\n    this.gameArea.querySelector('.dinosaur__modal').remove();\n    this.gameArea.querySelector('.cactus').remove();\n    this.gameOver = false;\n    this.resetScore();\n    this.renderObstacles();\n    this.checkCollision();\n  }\n}\n\nexport const googleDinoInit = () => {\n  const gameContainer = document.querySelector('.google-dinosaur');\n  const gameHtml = `<div class=\"google-dinosaur__container\">\n                        <h2 class=\"game__title\">Google динозавр</h2>\n                        <p class=\"dino-score\">Рахунок: 0</p>\n                        <div class=\"google-dinosaur__area\">\n                        <div class=\"dino\"></div></div> \n                    </div>`;\n  gameContainer.innerHTML = gameHtml;\n\n  const dino = gameContainer.querySelector('.dino');\n  const gameArea = document.querySelector('.google-dinosaur__area');\n  new GoogleDinosaur(dino, gameArea);\n};\n","import { guessNumberInit } from '../games/guess-number';\nimport { googleDinoInit } from '../games/google-dino';\nimport { timeCalculatorInit } from '../games/time-calculate';\nimport { calculatorInit } from '../games/calculator';\nexport default [\n  {\n    id: 1,\n    name: 'Високосний калькулятор',\n    category: 'numerical',\n    class: 'leap-year',\n  },\n  {\n    id: 2,\n    name: 'Вгадай число',\n    category: 'numerical',\n    class: 'guess-number',\n    init: guessNumberInit,\n  },\n  {\n    id: 3,\n    name: 'Камінь-Ножиці-Папір',\n    category: 'game',\n    class: 'rock-paper-scissors',\n  },\n  {\n    id: 4,\n    name: 'Калькулятор',\n    category: 'numerical',\n    class: 'calculator',\n    init: calculatorInit,\n  },\n  {\n    id: 5,\n    name: 'Калькулятор часу',\n    category: 'numerical',\n    class: 'time-calculator',\n    init: timeCalculatorInit,\n  },\n  {\n    id: 6,\n    name: 'Google динозаврик',\n    category: 'game',\n    class: 'google-dinosaur',\n    init: googleDinoInit,\n  },\n  {\n    id: 7,\n    name: 'Футбол',\n    category: 'game',\n    class: 'soccer',\n  },\n  {\n    id: 8,\n    name: 'Найбільше число',\n    category: 'numerical',\n    class: 'biggest-number',\n  },\n  {\n    id: 9,\n    name: 'Наша команда',\n    category: 'acquaintance',\n    class: 'our-team',\n  },\n  {\n    id: 10,\n    name: 'Вчений',\n    category: 'acquaintance',\n    class: 'scientist',\n  },\n];\n","export const calculatorInit = () => {\n  let ACTION = '';\n  const gameContainer = document.querySelector('.calculator');\n\n  const gameHtml = `\n  <div class=\"calculator__container\">\n    <h2 class=\"game__title\">Калькулятор</h2>\n        <form class=\"calculator__form\" data-calculator_form>\n          <input class=\"calculator__input\" type=\"number\" required name=\"firstNumberField\" placeholder=\"Введіть число\"/>\n\n          <ul class=\"calculator__actions\" data-actions>\n            <li class=\"calculator__action\">\n                <button class=\"calculator__button\" type=\"button\" data-action=\"sum\">+</button>\n            </li>\n             <li class=\"calculator__action\">\n                <button class=\"calculator__button\" type=\"button\" data-action=\"product \">*</button>\n            </li>\n             <li class=\"calculator__action\">\n                <button class=\"calculator__button\" type=\"button\" data-action=\"difference\">-</button>\n            </li>\n             <li class=\"calculator__action\">\n                <button class=\"calculator__button\" type=\"button\" data-action=\"quotient\">/</button>\n            </li>\n          </ul>\n          <input class=\"calculator__input\" type=\"number\" required name=\"secondNumberField\" placeholder=\"Введіть число\"/>\n\n          <button class=\"calculator__button\" type=\"button\" data-result=\"result\">=</button>\n\n          <div class=\"calculator__result\"><p data-output>Результат</p></div>\n        </form>\n    </div>`;\n\n  gameContainer.innerHTML = gameHtml;\n\n  const calculatorForm = document.querySelector('[data-calculator_form]');\n  const resultOutput = document.querySelector('[data-output]');\n\n  const calculate = (firstNumber, secondNumber, action) => {\n    console.log(firstNumber, secondNumber, action);\n    let result = 0;\n    switch (action) {\n      case 'sum':\n        result = firstNumber + secondNumber;\n        break;\n\n      case 'product ':\n        result = firstNumber * secondNumber;\n        break;\n\n      case 'difference':\n        result = firstNumber - secondNumber;\n        break;\n      case 'quotient':\n        if (secondNumber) {\n          result = firstNumber / secondNumber;\n        } else {\n          result = null;\n        }\n        break;\n    }\n    return result;\n  };\n\n  const handleActionClick = event => {\n    const target = event.target;\n\n    if (target.dataset.action) {\n      ACTION = target.dataset.action;\n    }\n\n    if (target.dataset.result) {\n      if (!ACTION) {\n        alert('Оберіть дію!');\n        return;\n      }\n      const firstNumber = parseFloat(calculatorForm.firstNumberField.value);\n      const secondNumber = parseFloat(calculatorForm.secondNumberField.value);\n\n      if (isNaN(firstNumber) || isNaN(secondNumber)) {\n        alert('Будь ласка, введіть обидва числа');\n        return;\n      }\n\n      const result = calculate(firstNumber, secondNumber, ACTION);\n\n      resultOutput.textContent =\n        result !== null ? `Результат: ${result}` : 'На нуль ділити не можна!';\n\n      ACTION = '';\n      calculatorForm.firstNumberField.value = '';\n      calculatorForm.secondNumberField.value = '';\n    }\n  };\n\n  calculatorForm.addEventListener('click', handleActionClick);\n};\n","export const timeCalculatorInit = () => {\n  const gameContainer = document.querySelector('.time-calculator');\n\n  const gameHtml = `\n    <div class=\"time-calculator__container\">\n      <h2 class=\"game__title\">Калькулятор часу</h2>\n      <div class=\"time-calculator__wrapper\">\n        <form class=\"time-calculator__form\" data-time_calculate_form>\n            <input class=\"time-calculator__input\" type=\"number\" required name=\"totalMinutes\" placeholder=\"Введіть число\"/>\n            <button class=\"time-calculator__button\" name=\"timeCalculatorNumberButton\">S</button>\n        </form>\n        <div class=\"time-calculator__result\"><p data-time_calculator_output>Результат</p></div>\n       </div>\n    </div>`;\n\n  gameContainer.innerHTML = gameHtml;\n\n  const timeCalculatorForm = document.querySelector(\n    '[data-time_calculate_form]'\n  );\n  const outputElement = document.querySelector('[data-time_calculator_output]');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n    const totalMinutesField = form.totalMinutes;\n\n    const totalMinutes = parseInt(totalMinutesField.value);\n\n    if (isNaN(totalMinutes) || totalMinutes < 0) {\n      outputElement.textContent = 'Будь ласка, введіть коректне число.';\n      return;\n    }\n    const days = Math.floor(totalMinutes / 1440);\n    const remainingMinutesAfterDays = totalMinutes % 1440;\n    const hours = Math.floor(remainingMinutesAfterDays / 60);\n    const minutes = remainingMinutesAfterDays % 60;\n\n    outputElement.textContent =\n      days > 0\n        ? `${days} дн. ${hours.toString().padStart(2, '0')}:${minutes\n            .toString()\n            .padStart(2, '0')}`\n        : `${hours.toString().padStart(2, '0')}:${minutes\n            .toString()\n            .padStart(2, '0')}`;\n    form.reset();\n  };\n\n  timeCalculatorForm.addEventListener('submit', handleSubmit);\n};\n","import games from './data/games';\n\nconst filter = document.querySelector('[data-filter]');\n\nconst renderGames = (games, category) => {\n  const gameContainer = document.querySelector('[data-games_container]');\n\n  const filterGames = (games, category = 'all') => {\n    if (category === 'all') {\n      return games;\n    }\n    return games.filter(game => game.category === category);\n  };\n\n  const filteredGames = filterGames(games, category);\n\n  gameContainer.innerHTML = filteredGames\n    .map(\n      game =>\n        `<section class='section' id='${game.class}'>\n           <div class=\"container\">\n            <div class=\"game ${game.class}\"></div>\n           </div>\n          </section>`\n    )\n    .join('');\n\n  filteredGames.forEach(game => {\n    if (game.init) {\n      game.init();\n    }\n  });\n};\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  renderGames(games);\n});\n\nconst filterHandler = event => {\n  if (event.target.tagName === 'BUTTON') {\n    const category = event.target.dataset.category;\n\n    switch (category) {\n      case 'numerical':\n        renderGames(games, 'numerical');\n\n        break;\n      case 'game':\n        renderGames(games, 'game');\n\n        break;\n      case 'acquaintance':\n        renderGames(games, 'acquaintance');\n\n        break;\n\n      default:\n        renderGames(games);\n    }\n  }\n};\n\nfilter ? filter.addEventListener('click', filterHandler) : null;\n"],"names":["$b909b3cf049c92e1$var$burgerBtn","document","querySelector","$b909b3cf049c92e1$var$filterMenu","$b909b3cf049c92e1$var$isOpen","addEventListener","style","opacity","pointerEvents","$1eb5f8cc5b353d2d$export$d6a97b2278bcabc0","RIDDLE_NUMBER","Math","floor","random","innerHTML","guessNumberForm","restartButton","handleSubmit","event","preventDefault","form","target","numberField","guessNumber","userNumber","parseInt","value","insertAdjacentHTML","classList","add","disabled","guessNumberButton","handleRestart","removeEventListener","$b6ff62313c3beebc$var$GoogleDinosaur","init","code","this","isJumping","gameOver","jump","gameArea","renderObstacles","checkCollision","dino","setTimeout","remove","gameProcess","obstacle","obstacleRect","getBoundingClientRect","dinoRect","right","left","bottom","top","endGame","requestAnimationFrame","createElement","height","randomHeight","appendChild","animationHandler","removeChild","updateScore","animationPlayState","gameOverModal","scoreElement","parentElement","score","textContent","resetScore","createModal","message","buttonText","buttonCallback","modalHtml","modal","gameModalStart","restartGame","constructor","$6681cdfd3416e539$export$2e2bcd8739ae039","id","name","category","class","ACTION","calculatorForm","resultOutput","dataset","action","result","alert","firstNumber","parseFloat","firstNumberField","secondNumber","secondNumberField","isNaN","console","log","calculate","timeCalculatorForm","outputElement","totalMinutesField","totalMinutes","days","remainingMinutesAfterDays","hours","minutes","toString","padStart","reset","gameContainer","$10cdac669b6c4a5a$var$filter","$10cdac669b6c4a5a$var$renderGames","games1","category1","filteredGames","games2","filter","game","filterGames","map","join","forEach","tagName"],"version":3,"file":"index.2e83a264.js.map"}